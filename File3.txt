Distributed Workflows
Unlike Centralized Version Control Systems (CVCSs), the distributed nature of Git allows you to be far more flexible in
how developers collaborate on projects. In centralized systems, every developer is a node working more or less equally
on a central hub. In Git, however, every developer is potentially both a node and a hub—that is, every developer can both
contribute code to other repositories and maintain a public repository on which others can base their work and which
they can contribute to. This opens a vast range of workflow possibilities for your project and/or your team, so we’ll cover
a few common paradigms that take advantage of this flexibility. We’ll go over the strengths and possible weaknesses of
each design; you can choose a single one to use, or you can mix and match features from each.
Centralized Workflow
In centralized systems, there is generally a single collaboration model—the centralized workflow. One central hub,
or repository, can accept code, and everyone synchronizes their work to it. A number of developers are nodes—
consumers of that hub—and synchronize to that one place.
